<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="beforeAdvice" class="aop.BeforeAdvice"/>
    <bean id="roundAdvice" class="aop.AroundAdvice"/>
    <bean id="afterAdviceAdvice" class="aop.AfterAdvice"/>

    <bean id="bookService" class="service.impl.BookServiceImpl"/>

    <!--添加pointcutAdviser, 用来具体标识 哪些方法添加增强-->
    <bean id="bookAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="beforeAdvice">
        </property>
        <property name="pattern" value="service\..*.print.*"></property>
    </bean>

    <!--会扫描所有容器中的advisor, 如上面的bookAdvisor,然后自动为这些advisor要应用的bean生成代理-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>


    <bean id="bookServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames">
            <list>
                <value>booAdvisor</value>
            </list>
        </property>
        <property name="target" ref="bookService"/>
    </bean>

    <!-- 没有添加advisor RegexMethodPointcutAdvisor 时，所有方法都会被增强 step1-->
    <bean id="bookServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames">
            <list>
                <value>beforeAdvice</value>
                <value>roundAdvice</value>
                <value>afterAdviceAdvice</value>
            </list>
        </property>
        <property name="target" ref="bookService"/>

    </bean>

</beans>